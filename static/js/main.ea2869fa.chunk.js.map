{"version":3,"sources":["Clock.js","Info.js","Spinner.js","SeasonDisplay.js","index.js"],"names":["Clock","state","time","setInterval","setState","Date","toLocaleTimeString","className","class","this","React","Component","Info","label","text","Spinner","message","defaultProps","seasonConfig","summer","iconName","winter","SeasonDisplay","props","lat","month","season","getMonth","Notification","errorMsg","App","window","navigator","geolocation","getCurrentPosition","position","coords","latitude","err","ReactDOM","render","document","querySelector"],"mappings":"2NAiBeA,G,wNAdbC,MAAQ,CAACC,KAAM,M,kEACM,IAAD,OAChBC,aAAY,WACV,EAAKC,SAAS,CAACF,MAAM,IAAIG,MAAOC,yBAC/B,O,+BAIH,OACI,sBAAKC,UAAU,OAAf,UAAsB,mBAAGC,MAAM,2BAAT,mBAAtB,IAAqEC,KAAKR,MAAMC,Y,GAVtEQ,IAAMC,YCkBXC,EAhBF,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,MAAMC,EAAU,EAAVA,KAEnB,OACE,sBAAKP,UAAU,iCAAf,UACE,oBAAGA,UAAU,OAAb,UACE,sBAAKA,UAAoB,UAARM,EAAmB,0BAA4B,2BAAhE,UAA8FA,EAA9F,OACCC,KAEH,mBAAGP,UAAU,OAAb,SACE,cAAC,EAAD,UCXFQ,EAAU,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAChB,OACE,qBAAKT,UAAU,mBAAf,SACE,qBAAKA,UAAU,iBAAf,SAAiCS,OAKvCD,EAAQE,aAAe,CACrBD,QAAS,kBAGID,QCXTG,G,MAAe,CACnBC,OAAQ,CACNL,KAAM,2BACNM,SAAU,OAEZC,OAAQ,CACNP,KAAM,wBACNM,SAAU,eAyBCE,EAbO,SAACC,GACrB,IATiBC,EAAKC,EAShBC,GATWF,EASQD,EAAMC,KATTC,GASc,IAAIpB,MAAOsB,YARpC,GAAKF,EAAQ,EACfD,EAAM,EAAI,SAAW,SAErBA,EAAM,EAAI,SAAW,UAIC,EAEJN,EAAaQ,GAAhCZ,EAFuB,EAEvBA,KAAMM,EAFiB,EAEjBA,SAEd,OACE,sBAAKb,UAAS,yBAAoBmB,GAAlC,UACE,mBAAGnB,UAAS,UAAKa,EAAL,6BACZ,6BAAKN,IACL,mBAAGP,UAAS,UAAKa,EAAL,kCCnBlB,SAASQ,EAAT,GAA4C,IAAnBJ,EAAkB,EAAlBA,IAAKK,EAAa,EAAbA,SAC5B,OAAIA,IAAaL,EACR,cAAC,EAAD,CAAMX,MAAM,QAAQC,KAAMe,KAE9BA,GAAYL,EACR,cAAC,EAAD,CAAMX,MAAM,WAAWC,KAAMU,IAEjCK,GAAaL,EAGX,KAFE,cAAC,EAAD,CAASR,QAAS,kC,IAKvBc,E,4MAGJ7B,MAAQ,CAAEuB,IAAK,KAAMK,SAAU,I,kEAEV,IAAD,OAClBE,OAAOC,UAAUC,YAAYC,oBAC3B,SAAAC,GAAQ,OAAI,EAAK/B,SAAS,CAAEoB,IAAKW,EAASC,OAAOC,cACjD,SAAAC,GAAG,OAAI,EAAKlC,SAAS,CAAEyB,SAAUS,EAAItB,e,+BAKvC,OACE,sBAAKT,UAAU,MAAf,UACE,cAACqB,EAAD,CAAcJ,IAAKf,KAAKR,MAAMuB,IAAKK,SAAUpB,KAAKR,MAAM4B,WACxD,cAAC,EAAD,CAAeL,IAAKf,KAAKR,MAAMuB,a,GAhBrBd,IAAMC,WAsBxB4B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,cAAc,Y","file":"static/js/main.ea2869fa.chunk.js","sourcesContent":["import React from 'react';\n\nclass Clock extends React.Component {\n  state = {time: null};\n  componentDidMount() {\n      setInterval(() => {\n        this.setState({time: new Date().toLocaleTimeString()})    \n      }, 1000)\n  }\n  \n  render() {\n      return (\n          <div className=\"time\"><a class=\"ui horizontal label grey\">Time:</a> {this.state.time}</div>\n      );\n  }\n}\n\nexport default Clock;","import './Info.css';\nimport React from 'react';\nimport Clock from './Clock';\n\nconst Info = ({label,text}) => {\n\n  return (\n    <div className=\"ui divided selection list info\">\n      <a className=\"item\">\n        <div className={(label==='Error') ? 'ui horizontal label red' : 'ui horizontal label teal' }>{label}:</div>\n        {text}\n      </a>\n      <a className=\"item\">\n        <Clock />\n      </a>\n    </div>\n  );\n\n}\n\nexport default Info;","import React from 'react';\n\nconst Spinner = ({message}) => {\n  return (\n    <div className=\"ui active dimmer\">\n      <div className=\"ui text loader\">{message}</div>\n    </div>\n  );\n}\n\nSpinner.defaultProps = {\n  message: 'Loading …'\n}\n\nexport default Spinner;","import './SeasonDisplay.css';\nimport React from 'react';\n\nconst seasonConfig = {\n  summer: {\n    text: 'Let’s hit the beach',\n    iconName: 'sun'\n  }, \n  winter: {\n    text: 'Brr, it’s chilly',\n    iconName: 'snowflake'\n  }\n}\n\nconst getSeason = (lat, month) => {\n  if(month > 2 && month < 9) {\n    return lat > 0 ? 'summer' : 'winter';\n  } else {\n    return lat > 0 ? 'winter' : 'summer';\n  }\n}\n\nconst SeasonDisplay = (props) => {\n  const season = getSeason(props.lat, new Date().getMonth());\n  const { text, iconName } = seasonConfig[season];\n  \n  return (\n    <div className={`season-display ${season}`}>\n      <i className={`${iconName} icon massive icon-left`}></i>\n      <h1>{text}</h1>\n      <i className={`${iconName} icon massive icon-right`}></i>\n    </div>\n  );\n};\n\nexport default SeasonDisplay;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"semantic-ui-css/semantic.min.css\";\nimport Info from './Info';\nimport Spinner from './Spinner';\nimport SeasonDisplay from './SeasonDisplay';\n\nif (module.hot) {\n  module.hot.accept();\n}\n\nfunction Notification ({ lat, errorMsg })  {\n  if (errorMsg && !lat) {\n    return <Info label=\"Error\" text={errorMsg} />;\n  }\n  if (!errorMsg && lat) {\n    return <Info label=\"Latitude\" text={lat} />;\n  }\n  if (!errorMsg && !lat) {\n    return <Spinner message={\"Please allow location request\"} />;\n  }\n  return null;\n}\n\nclass App extends React.Component {\n  \n  // shorthand notation for JS class constructor\n  state = { lat: null, errorMsg: '' };\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(\n      position => this.setState({ lat: position.coords.latitude }),\n      err => this.setState({ errorMsg: err.message })\n    );\n  }\n  render() {\n    \n    return (\n      <div className=\"app\">\n        <Notification lat={this.state.lat} errorMsg={this.state.errorMsg} />\n        <SeasonDisplay lat={this.state.lat} />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <App />, \n  document.querySelector('#root')\n);"],"sourceRoot":""}